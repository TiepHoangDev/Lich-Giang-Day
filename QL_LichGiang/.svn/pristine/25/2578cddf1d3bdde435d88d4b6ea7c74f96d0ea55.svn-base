
using BUSINESS_OBJECT.Objects;
using System;
using System.Collections.Generic;
using DATA_ACCESS_LAYER.DataModels;
namespace DATA_ACCESS_LAYER.Dao
{
    public class StudentDetailtDao
    {

        public bool Insert(StudentDetailtObjects ob)
        {
            var db = new eTrainingScheduleEntities();
            var data = db.sp_tbl_S07_StudentDetailt_INSERT(ob.StdId, ob.StudetId, ob.CoId, ob.Description);
            return true;
        }


        public bool Update(StudentDetailtObjects ob)
        {
            var db = new eTrainingScheduleEntities();
            var data = db.sp_tbl_S07_StudentDetailt_UPDATE(ob.StdId, ob.StudetId, ob.CoId, ob.Description);
            return true;
        }


        public List<StudentDetailtObjects> GetAll()
        {
            List<StudentDetailtObjects> lst = new List<StudentDetailtObjects>();
            var db = new eTrainingScheduleEntities();
            var list = db.sp_tbl_S07_StudentDetailt_GetAll();
            foreach (var item in list)
            {
                StudentDetailtObjects ob = new StudentDetailtObjects();
                ob.StdId = item.StdId; ob.StudetId = item.StudetId; ob.CoId = item.CoId; ob.Description = item.Description;
                lst.Add(ob);
            }
            return lst;
        }


        public StudentDetailtObjects GetByStdId(StudentDetailtObjects ob)
        {
            var db = new eTrainingScheduleEntities();
            var list = db.sp_tbl_S07_StudentDetailt_GetByStdId(ob.StdId);
            StudentDetailtObjects obj = new StudentDetailtObjects();
            foreach (var item in list)
            {
                obj.StdId = item.StdId; obj.StudetId = item.StudetId; obj.CoId = item.CoId; obj.Description = item.Description;
            }
            return obj;
        }


        public bool Delete(Guid id)
        {
            var db = new eTrainingScheduleEntities();
            var data = db.sp_tbl_S07_StudentDetailt_DELETE(id);
            return true;
        }
    }
}
