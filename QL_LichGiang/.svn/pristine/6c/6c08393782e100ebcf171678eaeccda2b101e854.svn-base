
using BUSINESS_OBJECT.Objects;
using System;
using System.Collections.Generic;
using DATA_ACCESS_LAYER.DataModels;
namespace DATA_ACCESS_LAYER.Dao
{
    public class SchedulersDao
    {

        public bool Insert(SchedulersObjects ob)
        {
            var db = new eTrainingScheduleEntities();
            var data = db.sp_tbl_S07_Schedulers_INSERT(ob.ScId, ob.WeId, ob.ShiftId, ob.CoId, ob.Description);
            return true;
        }


        public bool Update(SchedulersObjects ob)
        {
            var db = new eTrainingScheduleEntities();
            var data = db.sp_tbl_S07_Schedulers_UPDATE(ob.ScId, ob.WeId, ob.ShiftId, ob.CoId, ob.Description);
            return true;
        }


        public List<SchedulersObjects> GetAll()
        {
            List<SchedulersObjects> lst = new List<SchedulersObjects>();
            var db = new eTrainingScheduleEntities();
            var list = db.sp_tbl_S07_Schedulers_GetAll();
            foreach (var item in list)
            {
                SchedulersObjects ob = new SchedulersObjects();
                ob.ScId = item.ScId; ob.WeId = item.WeId; ob.ShiftId = item.ShiftId; ob.CoId = item.CoId; ob.Description = item.Description;
                lst.Add(ob);
            }
            return lst;
        }


        public SchedulersObjects GetByScId(Guid ID)
        {
            var db = new eTrainingScheduleEntities();
            var list = db.sp_tbl_S07_Schedulers_GetByScId(ID);
            SchedulersObjects obj = new SchedulersObjects();
            foreach (var item in list)
            {
                obj.ScId = item.ScId; obj.WeId = item.WeId; obj.ShiftId = item.ShiftId; obj.CoId = item.CoId; obj.Description = item.Description;
            }
            return obj;
        }


        public bool Delete(Guid id)
        {
            var db = new eTrainingScheduleEntities();
            var data = db.sp_tbl_S07_Schedulers_DELETE(id);
            return true;
        }


    }
}
