using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using BUSINESS_LOGIC_LAYER.BCL;
using BUSINESS_OBJECT.Objects;
namespace QL_LICHGIANGDAY.UserControll
{
    public partial class UcPermisstion : UserControl
    {
        private PermissChange objPerChangeEntity =new PermissChange();
        private AccountObject objAccountEtity = new AccountObject();
        private PermisstionObject objPerEitity = new PermisstionObject();
        private PermisstionBCL objPerControll = new PermisstionBCL();
        public UcPermisstion()
        {
            InitializeComponent();
            trVEmployee.Nodes.Add("Danh sách các Username");
            trVEmployee.Nodes[0].Expand();
            trVEmployee.Nodes[0].Tag = "0";
            addPermisstion();
        }
        public void addPermisstion()
        {
            List<AccountObject> lisAccount = new AccountBCL().GetAll();
            int a = 0;
            foreach (var item in lisAccount)
            {
                trVEmployee.Nodes[0].Nodes.Add("" + item.UserId, item.FullName);
                trVEmployee.Nodes[0].Nodes[a].Tag = "1";
                objPerChangeEntity.nodeLeve = 0;
                a++;
            }
        }

        private void trVEmployee_AfterSelect(object sender, TreeViewEventArgs e)
        {
            if (("" + trVEmployee.SelectedNode.Tag).Equals("1"))
            {
                if (objPerChangeEntity.nodeLeve != 1)
                {
                    objPerChangeEntity.nodeLeve = 1;
                    objPerChangeEntity.Changed = false;
                    string UserID = trVEmployee.SelectedNode.Name;
                    grCUserID.DataSource = new PermisstionBCL().GetAll().Where(q => q.UserId.ToString() == UserID).ToList();
                }
                else
                {
                    if (objPerChangeEntity.Changed == true)
                    {
                        List<PermisstionObject> list = new List<PermisstionObject>();
                        DialogResult result = MessageBox.Show("Bạn có muốn lưu thay đổi", "Xác nhận", MessageBoxButtons.YesNo);
                        if (result == DialogResult.Yes)
                        {
                            for (int i = 0; i < grDUserID.RowCount; i++)
                            {
                                PermisstionObject objPerEntity = (PermisstionObject)grDUserID.GetRow(i);
                                list.Add(objPerEntity);
                            }
                            foreach (PermisstionObject ob in list)
                            {
                                objPerControll.Update(ob);
                            }
                        }
                        objPerChangeEntity.Changed = false;
                    }
                    TreeNode tree = trVEmployee.SelectedNode;
                    string UserID = trVEmployee.SelectedNode.Name;
                    grCUserID.DataSource = new PermisstionBCL().GetByPerID(Guid.Parse(UserID));
                }
            }
        }

        private void grDUserID_CellValueChanged(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            if (objPerChangeEntity.Changed == false)
            {
                objPerChangeEntity.Changed = true;
            }
        }

        private void grCUserID_Load(object sender, EventArgs e)
        {
            //Load_grcPermission();
        }

        //private void Load_grcPermission(Guid ID_User)
        //{
        //    var lstFea = new FeaIdBCL().GetAll();
        //    var lstPer = new PermisstionBCL().GetAll();
        //    List<PermisstionObject> lst = new List<PermisstionObject>();
        //    foreach (var itemFea in lstFea)
        //    {
                
        //    }
        //}
    }
}
