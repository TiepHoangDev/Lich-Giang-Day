
using BUSINESS_OBJECT.Objects;
using System;
using System.Collections.Generic;
using DATA_ACCESS_LAYER.DataModels;
namespace DATA_ACCESS_LAYER.Dao
{
    public class ExpertsDetailtDao
    {

        public bool Insert(ExpertsDetailtObjects ob)
        {
            var db = new eTrainingScheduleEntities();
            var data = db.sp_tbl_S07_ExpertsDetailt_INSERT(ob.ExId, ob.ExpertId, ob.CoId, ob.Description);
            return true;
        }


        public bool Update(ExpertsDetailtObjects ob)
        {
            var db = new eTrainingScheduleEntities();
            var data = db.sp_tbl_S07_ExpertsDetailt_UPDATE(ob.ExId, ob.ExpertId, ob.CoId, ob.Description);
            return true;
        }


        public List<ExpertsDetailtObjects> GetAll()
        {
            List<ExpertsDetailtObjects> lst = new List<ExpertsDetailtObjects>();
            var db = new eTrainingScheduleEntities();
            var list = db.sp_tbl_S07_ExpertsDetailt_GetAll();
            foreach (var item in list)
            {
                ExpertsDetailtObjects ob = new ExpertsDetailtObjects();
                ob.ExId = item.ExId; ob.ExpertId = item.ExpertId; ob.CoId = item.CoId; ob.Description = item.Description;
                lst.Add(ob);
            }
            return lst;
        }


        public ExpertsDetailtObjects GetByExId(Guid ExId)
        {
            var db = new eTrainingScheduleEntities();
            var list = db.sp_tbl_S07_ExpertsDetailt_GetByExId(ExId);
            ExpertsDetailtObjects obj = new ExpertsDetailtObjects();
            foreach (var item in list)
            {
                obj.ExId = item.ExId; obj.ExpertId = item.ExpertId; obj.CoId = item.CoId; obj.Description = item.Description;
            }
            return obj;
        }


        public bool Delete(Guid ID)
        {
            var db = new eTrainingScheduleEntities();
            var Data = db.sp_tbl_S07_ExpertsDetailt_DELETE(ID);
            return true;
        }
    }
}
